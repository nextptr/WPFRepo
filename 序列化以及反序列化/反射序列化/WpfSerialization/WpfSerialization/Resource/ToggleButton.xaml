<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="ToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="outer"
                            BorderBrush="White"
                            BorderThickness="0"
                            Opacity=".9"
                            Background="Transparent">
                        <Border x:Name="inner"
                                Margin="0"
                                BorderThickness="0.5"
                                BorderBrush="Black"
                                Background="LightGray">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="inner" Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="YellowToggleButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ToggleButton}">
        <Setter Property="Background" Value="Yellow"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="GreenToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border>
                        <Grid>
                            <Border x:Name="inner"
                                BorderBrush="ForestGreen"
                                Background="ForestGreen">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <Border x:Name="outer"
                                BorderBrush="Yellow"
                                Background="Yellow">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="inner" Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="False">
                            <Setter TargetName="outer" Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GreenToggleButton1" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackgroundFill}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorder}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnChecked1">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path">
                                <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="40,0,0,0"/>
                            </ThicknessAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path1">
                                <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="40,0,0,0"/>
                            </ThicknessAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path2">
                                <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="40,0,0,0"/>
                            </ThicknessAnimationUsingKeyFrames>
                            <StringAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Text)" Storyboard.TargetName="displayText">
                                <DiscreteStringKeyFrame KeyTime="0" Value="OFF"/>
                            </StringAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnUnchecked1">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path">
                                <EasingThicknessKeyFrame KeyTime="0" Value="40,0,0,0"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0"/>
                            </ThicknessAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path1">
                                <EasingThicknessKeyFrame KeyTime="0" Value="40,0,0,0"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0"/>
                            </ThicknessAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path2">
                                <EasingThicknessKeyFrame KeyTime="0" Value="40,0,0,0"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0"/>
                            </ThicknessAnimationUsingKeyFrames>
                            <StringAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Text)" Storyboard.TargetName="displayText">
                                <DiscreteStringKeyFrame KeyTime="0" Value="ON"/>
                            </StringAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="displayText">
                                <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF63FA00"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border CornerRadius="10" Background="#FF3B3939" Width="60" Height="20">
                        <Grid>
                            <TextBlock x:Name="displayText" Text="ON" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                            <Path x:Name="path2" Fill="Black">
                                <Path.Data>
                                    <GeometryGroup>
                                        <GeometryGroup.Children>
                                            <EllipseGeometry Center="10,10" RadiusX="8.5" RadiusY="8.5"></EllipseGeometry>
                                        </GeometryGroup.Children>
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>
                            <Path x:Name="path1" Fill="#FF818080">
                                <Path.Data>
                                    <GeometryGroup>
                                        <GeometryGroup.Children>
                                            <EllipseGeometry Center="10,10" RadiusX="7" RadiusY="7"></EllipseGeometry>
                                        </GeometryGroup.Children>
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>
                            <Path x:Name="path">
                                <Path.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF807F7F" Offset="0"/>
                                        <GradientStop Color="#FF373636" Offset="1"/>
                                    </LinearGradientBrush>
                                </Path.Fill>
                                <Path.Data>
                                    <GeometryGroup>
                                        <GeometryGroup.Children>
                                            <EllipseGeometry Center="10,10" RadiusX="8" RadiusY="8"></EllipseGeometry>
                                        </GeometryGroup.Children>
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ToggleButton.Checked">
                            <BeginStoryboard Storyboard="{StaticResource OnChecked1}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                            <BeginStoryboard x:Name="OnUnchecked1_BeginStoryboard" Storyboard="{StaticResource OnUnchecked1}"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>