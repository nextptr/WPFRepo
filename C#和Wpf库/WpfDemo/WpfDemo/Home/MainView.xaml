<hc:Window x:Class="WpfDemo.Home.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:s="https://github.com/canton7/Stylet"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        WindowStartupLocation="CenterScreen"
        mc:Ignorable="d" x:Name="rot"
        Icon="/WpfDemo;component/Resource/Image/goback.png"
        Height="650" Width="1000" ResizeMode="NoResize"
        Title="C#和WPF代码库">
    <Window.Style>
        <Style BasedOn="{x:Null}" TargetType="hc:Window">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#262e2f"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="NonClientAreaBackground" Value="{DynamicResource RegionBrush}"/>
            <Setter Property="NonClientAreaForeground" Value="{DynamicResource PrimaryTextBrush}"/>
            <Setter Property="CloseButtonBackground" Value="Transparent"/>
            <Setter Property="CloseButtonForeground" Value="{DynamicResource PrimaryTextBrush}"/>
            <Setter Property="CloseButtonHoverBackground" Value="#e81123"/>
            <Setter Property="CloseButtonHoverForeground" Value="White"/>
            <Setter Property="OtherButtonBackground" Value="Transparent"/>
            <Setter Property="OtherButtonForeground" Value="{DynamicResource PrimaryTextBrush}"/>
            <Setter Property="OtherButtonHoverBackground" Value="{DynamicResource DarkMaskBrush}"/>
            <Setter Property="OtherButtonHoverForeground" Value="{DynamicResource PrimaryTextBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="hc:Window">
                        <Border SnapsToDevicePixels="True" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                            <Grid Margin="{TemplateBinding Padding}" ShowGridLines="True">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid Background="{TemplateBinding NonClientAreaBackground}" Name="PART_NonClientArea" TextElement.Foreground="{TemplateBinding NonClientAreaForeground}">
                                    <StackPanel Name="ButtonPanel" shell:WindowChrome.IsHitTestVisibleInChrome="True" UseLayoutRounding="True" VerticalAlignment="Top" Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal">
                                        <Button Background="{TemplateBinding OtherButtonBackground}" Foreground="{TemplateBinding OtherButtonForeground}" Command="shell:SystemCommands.MinimizeWindowCommand" IsTabStop="False" Name="ButtonMin"     Height="29" Style="{StaticResource ButtonIcon}" Width="45" hc:IconElement.Geometry="{StaticResource WindowMinGeometry}"     BorderThickness="1,0,1,0" hc:IconElement.Width="10" hc:IconElement.Height="10"/>
                                        <Button Background="{TemplateBinding OtherButtonBackground}" Foreground="{TemplateBinding OtherButtonForeground}" Command="shell:SystemCommands.MaximizeWindowCommand" IsTabStop="False" Name="ButtonMax"     Height="29" Style="{StaticResource ButtonIcon}" Width="46" hc:IconElement.Geometry="{StaticResource WindowMaxGeometry}"     BorderThickness="1,0,1,0" hc:IconElement.Width="10" hc:IconElement.Height="10"/>
                                        <Button Background="{TemplateBinding OtherButtonBackground}" Foreground="{TemplateBinding OtherButtonForeground}" Command="shell:SystemCommands.RestoreWindowCommand"  IsTabStop="False" Name="ButtonRestore" Height="29" Style="{StaticResource ButtonIcon}" Width="46" hc:IconElement.Geometry="{StaticResource WindowRestoreGeometry}" BorderThickness="1,0,1,0" hc:IconElement.Width="10" hc:IconElement.Height="10"/>
                                        <Button Background="{TemplateBinding CloseButtonBackground}" Foreground="{TemplateBinding CloseButtonForeground}" Command="shell:SystemCommands.CloseWindowCommand"    IsTabStop="False" Name="ButtonClose"   Height="29" Style="{StaticResource ButtonIcon}" Width="46" hc:IconElement.Geometry="{StaticResource CloseGeometry}"         BorderThickness="1,0,0,0" hc:IconElement.Width="10" hc:IconElement.Height="10"/>
                                    </StackPanel>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Button Name="ButtonIcon" IsEnabled="True" Click="{s:Action btnIconClick}" Background="Transparent" Margin="10,0,0,0" shell:WindowChrome.IsHitTestVisibleInChrome="True" Style="{StaticResource ButtonCustom}" VerticalAlignment="Center">
                                            <StackPanel Orientation="Horizontal">
                                                <Image     IsHitTestVisible="False" VerticalAlignment="Center" Name="Icon" Source="{TemplateBinding Icon}" Width="16" Height="16"/>
                                                <TextBlock IsHitTestVisible="False" VerticalAlignment="Center" Text="{TemplateBinding Title}" Padding="2,0,0,0"/>
                                            </StackPanel>
                                        </Button>
                                        <ContentPresenter Grid.Column="1" shell:WindowChrome.IsHitTestVisibleInChrome="True" x:Name="ContentPresenterMain" Content="{TemplateBinding NonClientAreaContent}"/>
                                    </Grid>
                                </Grid>
                                <AdornerDecorator Grid.Row="1">
                                    <ContentPresenter ClipToBounds="True"/>
                                </AdornerDecorator>
                                <ResizeGrip Width="10" Height="10" x:Name="ResizeGrip" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Row="1" IsTabStop="False" Visibility="Collapsed"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsActive" Value="False">
                                <Setter Property="Opacity" Value=".8" TargetName="ContentPresenterMain"/>
                                <Setter Property="Opacity" Value=".8" TargetName="ButtonPanel"/>
                            </Trigger>
                            <Trigger Property="WindowState" Value="Maximized">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonMax"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="ButtonRestore"/>
                            </Trigger>
                            <Trigger Property="WindowState" Value="Normal">
                                <Setter Property="Visibility" Value="Visible" TargetName="ButtonMax"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonRestore"/>
                            </Trigger>
                            <Trigger Property="ResizeMode" Value="NoResize">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonMin"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonMax"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonRestore"/>
                            </Trigger>
                            <Trigger Property="ResizeMode" Value="CanMinimize">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonMax"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonRestore"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True" SourceName="ButtonClose">
                                <Setter Property="Background" TargetName="ButtonClose" Value="{Binding CloseButtonHoverBackground,RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="Foreground" TargetName="ButtonClose" Value="{Binding CloseButtonHoverForeground,RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True" SourceName="ButtonMax">
                                <Setter Property="Background" TargetName="ButtonMax" Value="{Binding OtherButtonHoverBackground,RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="Foreground" TargetName="ButtonMax" Value="{Binding OtherButtonHoverForeground,RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True" SourceName="ButtonRestore">
                                <Setter Property="Background" TargetName="ButtonRestore" Value="{Binding OtherButtonHoverBackground,RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="Foreground" TargetName="ButtonRestore" Value="{Binding OtherButtonHoverForeground,RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True" SourceName="ButtonMin">
                                <Setter Property="Background" TargetName="ButtonMin" Value="{Binding OtherButtonHoverBackground,RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="Foreground" TargetName="ButtonMin" Value="{Binding OtherButtonHoverForeground,RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                            <Trigger Property="WindowStyle" Value="None">
                                <Setter Property="ShowNonClientArea" Value="True"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                                    <Condition Property="WindowState" Value="Normal" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ResizeGrip" Property="Visibility" Value="Visible" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>
    <ContentControl s:View.Model="{Binding ActiveItem}" />
</hc:Window>
